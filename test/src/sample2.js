// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Decco = require("./Decco.js");
var Js_json = require("rescript/lib/js/js_json.js");
var Caml_obj = require("rescript/lib/js/caml_obj.js");

function t_encode(v) {
  if (v) {
    return "둘";
  } else {
    return "하나";
  }
}

function t_decode(v) {
  var match = Js_json.classify(v);
  if (typeof match === "number") {
    return Decco.error(undefined, "Not a variants", v);
  }
  if (match.TAG !== /* JSONString */0) {
    return Decco.error(undefined, "Not a variants", v);
  }
  var tagged = Js_json.classify(v);
  if (Caml_obj.caml_equal({
          TAG: /* JSONString */0,
          _0: "하나"
        }, tagged)) {
    return {
            TAG: /* Ok */0,
            _0: /* One */0
          };
  } else if (Caml_obj.caml_equal({
          TAG: /* JSONString */0,
          _0: "둘"
        }, tagged)) {
    return {
            TAG: /* Ok */0,
            _0: /* Two */1
          };
  } else {
    return Decco.error(undefined, "Not matched", v);
  }
}

exports.t_encode = t_encode;
exports.t_decode = t_decode;
/* No side effect */
